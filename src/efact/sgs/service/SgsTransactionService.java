
package efact.sgs.service;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SgsTransactionService", targetNamespace = "http://service.sgs.efact/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SgsTransactionService {


    /**
     * 
     * @param authorization
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://service.sgs.efact/SgsTransactionService/sendPingRequest", output = "http://service.sgs.efact/SgsTransactionService/sendPingResponse")
    public boolean sendPing(
        @WebParam(name = "Authorization", targetNamespace = "http://service.sgs.efact/", header = true, partName = "Authorization")
        Authorization authorization);

    /**
     * 
     * @param authorization
     * @param file
     * @return
     *     returns efact.sgs.service.TransactionResponse
     * @throws ExecutionException_Exception
     * @throws InterruptedException_Exception
     */
    @WebMethod
    @WebResult(name = "responseSendInvoice", partName = "responseSendInvoice")
    @Action(input = "http://service.sgs.efact/SgsTransactionService/sendInvoiceRequest", output = "http://service.sgs.efact/SgsTransactionService/sendInvoiceResponse", fault = {
        @FaultAction(className = InterruptedException_Exception.class, value = "http://service.sgs.efact/SgsTransactionService/sendInvoice/Fault/InterruptedException"),
        @FaultAction(className = ExecutionException_Exception.class, value = "http://service.sgs.efact/SgsTransactionService/sendInvoice/Fault/ExecutionException")
    })
    public TransactionResponse sendInvoice(
        @WebParam(name = "Authorization", targetNamespace = "http://service.sgs.efact/", header = true, partName = "Authorization")
        Authorization authorization,
        @WebParam(name = "file", partName = "file")
        byte[] file)
        throws ExecutionException_Exception, InterruptedException_Exception
    ;

    /**
     * 
     * @param authorization
     * @param file
     * @return
     *     returns efact.sgs.service.TransactionResponse
     * @throws ExecutionException_Exception
     * @throws InterruptedException_Exception
     */
    @WebMethod
    @WebResult(name = "responseSendBoleta", partName = "responseSendBoleta")
    @Action(input = "http://service.sgs.efact/SgsTransactionService/sendBoletaRequest", output = "http://service.sgs.efact/SgsTransactionService/sendBoletaResponse", fault = {
        @FaultAction(className = InterruptedException_Exception.class, value = "http://service.sgs.efact/SgsTransactionService/sendBoleta/Fault/InterruptedException"),
        @FaultAction(className = ExecutionException_Exception.class, value = "http://service.sgs.efact/SgsTransactionService/sendBoleta/Fault/ExecutionException")
    })
    public TransactionResponse sendBoleta(
        @WebParam(name = "Authorization", targetNamespace = "http://service.sgs.efact/", header = true, partName = "Authorization")
        Authorization authorization,
        @WebParam(name = "file", partName = "file")
        byte[] file)
        throws ExecutionException_Exception, InterruptedException_Exception
    ;

    /**
     * 
     * @param authorization
     * @param file
     * @return
     *     returns efact.sgs.service.TransactionResponse
     * @throws ExecutionException_Exception
     * @throws InterruptedException_Exception
     */
    @WebMethod
    @WebResult(name = "responseSendCreditNote", partName = "responseSendCreditNote")
    @Action(input = "http://service.sgs.efact/SgsTransactionService/sendCreditNoteRequest", output = "http://service.sgs.efact/SgsTransactionService/sendCreditNoteResponse", fault = {
        @FaultAction(className = InterruptedException_Exception.class, value = "http://service.sgs.efact/SgsTransactionService/sendCreditNote/Fault/InterruptedException"),
        @FaultAction(className = ExecutionException_Exception.class, value = "http://service.sgs.efact/SgsTransactionService/sendCreditNote/Fault/ExecutionException")
    })
    public TransactionResponse sendCreditNote(
        @WebParam(name = "Authorization", targetNamespace = "http://service.sgs.efact/", header = true, partName = "Authorization")
        Authorization authorization,
        @WebParam(name = "file", partName = "file")
        byte[] file)
        throws ExecutionException_Exception, InterruptedException_Exception
    ;

    /**
     * 
     * @param authorization
     * @param file
     * @return
     *     returns efact.sgs.service.TransactionResponse
     * @throws ExecutionException_Exception
     * @throws InterruptedException_Exception
     */
    @WebMethod
    @WebResult(name = "responseSendDebitNote", partName = "responseSendDebitNote")
    @Action(input = "http://service.sgs.efact/SgsTransactionService/sendDebitNoteRequest", output = "http://service.sgs.efact/SgsTransactionService/sendDebitNoteResponse", fault = {
        @FaultAction(className = InterruptedException_Exception.class, value = "http://service.sgs.efact/SgsTransactionService/sendDebitNote/Fault/InterruptedException"),
        @FaultAction(className = ExecutionException_Exception.class, value = "http://service.sgs.efact/SgsTransactionService/sendDebitNote/Fault/ExecutionException")
    })
    public TransactionResponse sendDebitNote(
        @WebParam(name = "Authorization", targetNamespace = "http://service.sgs.efact/", header = true, partName = "Authorization")
        Authorization authorization,
        @WebParam(name = "file", partName = "file")
        byte[] file)
        throws ExecutionException_Exception, InterruptedException_Exception
    ;

    /**
     * 
     * @param authorization
     * @param file
     * @return
     *     returns efact.sgs.service.TransactionResponse
     * @throws ExecutionException_Exception
     * @throws InterruptedException_Exception
     */
    @WebMethod
    @WebResult(name = "responseSendVoidedDocument", partName = "responseSendVoidedDocument")
    @Action(input = "http://service.sgs.efact/SgsTransactionService/sendVoidedDocumentRequest", output = "http://service.sgs.efact/SgsTransactionService/sendVoidedDocumentResponse", fault = {
        @FaultAction(className = InterruptedException_Exception.class, value = "http://service.sgs.efact/SgsTransactionService/sendVoidedDocument/Fault/InterruptedException"),
        @FaultAction(className = ExecutionException_Exception.class, value = "http://service.sgs.efact/SgsTransactionService/sendVoidedDocument/Fault/ExecutionException")
    })
    public TransactionResponse sendVoidedDocument(
        @WebParam(name = "Authorization", targetNamespace = "http://service.sgs.efact/", header = true, partName = "Authorization")
        Authorization authorization,
        @WebParam(name = "file", partName = "file")
        byte[] file)
        throws ExecutionException_Exception, InterruptedException_Exception
    ;

    /**
     * 
     * @param authorization
     * @param identifier
     * @param documentType
     * @return
     *     returns efact.sgs.service.TransactionResult
     */
    @WebMethod
    @WebResult(name = "responseGetStatus", partName = "responseGetStatus")
    @Action(input = "http://service.sgs.efact/SgsTransactionService/getStatusRequest", output = "http://service.sgs.efact/SgsTransactionService/getStatusResponse")
    public TransactionResult getStatus(
        @WebParam(name = "Authorization", targetNamespace = "http://service.sgs.efact/", header = true, partName = "Authorization")
        Authorization authorization,
        @WebParam(name = "documentType", partName = "documentType")
        int documentType,
        @WebParam(name = "identifier", partName = "identifier")
        String identifier);

}
